<?xml version="1.0"?>

<launch>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- <arg name="x" default="3.02"/>
  <arg name="y" default="-19.45"/>
  <arg name="z" default="0.55"/> -->

  <arg name="x2" default="5.59"/>
  <arg name="y2" default="-19.49"/>
  <arg name="z2" default="0.0"/>
  <param name="/use_sim_time" value="false"/>
  <node
    pkg="gazebo_ros" type="gazebo" name="gazebo"
    args="$(find multi_robot_task)/worlds/rescue">
  </node>


      <!-- <arg name="x" default="3.02"/>
      <arg name="y" default="-19.45"/>
      <arg name="z" default="0.55"/> -->
<!-- __________________________________________________________________________ -->


<!-- <group ns="pelican">
  <arg name="name" default="quadrotor"/>
  <arg name="tf_prefix" default="$(optenv ROS_NAMESPACE)"/>
  <arg name="x" default="3.02"/>
  <arg name="y" default="-19.45"/>
  <arg name="z" default="0.55"/>
  <arg name="use_ground_truth_for_tf" default="true"/>
  <arg name="use_ground_truth_for_control" default="true"/>
  <arg name="use_pose_estimation" if="$(arg use_ground_truth_for_control)" default="false"/>
  <arg name="use_pose_estimation" unless="$(arg use_ground_truth_for_control)" default="true"/>

  <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch">
    <arg name="name" default="$(arg name)"/>
    <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor_downward_cam.gazebo.xacro"/>
    <arg name="tf_prefix" default="$(arg tf_prefix)"/>
    <arg name="x" default="$(arg x)"/>
    <arg name="y" default="$(arg y)"/>
    <arg name="z" default="$(arg z)"/>
    <arg name="use_ground_truth_for_tf" value="$(arg use_ground_truth_for_tf)"/>
    <arg name="use_ground_truth_for_control" value="$(arg use_ground_truth_for_control)"/>
    <arg name="use_pose_estimation" value="$(arg use_pose_estimation)"/>
  </include>
</group> -->
  <!-- _____________________________________________________________________________ -->



 <arg name="laser_enabled" default="$(optenv HUSKY_LASER_ENABLED true)"/>
 <arg name="ur5_enabled" default="$(optenv HUSKY_UR5_ENABLED false)"/>
 <arg name="kinect_enabled" default="$(optenv HUSKY_KINECT_ENABLED false)"/>


 <include file="$(find multi_robot_task)/launch/spawn_husky.launch">
   <arg name="x2" default="$(arg x2)"/>
   <arg name="y2" default="$(arg y2)"/>
   <arg name="z2" default="$(arg z2)"/>
   <arg name="laser_enabled" value="$(arg laser_enabled)"/>
   <arg name="ur5_enabled" value="$(arg ur5_enabled)"/>
   <arg name="kinect_enabled" value="$(arg kinect_enabled)"/>
 </include>




<!-- Run gmapping to create map -->
<include file="$(find husky_navigation)/launch/gmapping.launch" />

<!-- Launch hector_slam for laser odometry and mapping -->
<!--include file="$(find hector_mapping_nav)/launch/scanmatch_nav.launch" /-->

<!-- Launch robot_localization and navsat node-->
<include file="$(find outdoor_waypoint_nav)/launch/include/localization_run_sim.launch"/>

<!-- Run rviz -->
<node name="rviz" pkg="rviz" type="rviz" args="-d $(find outdoor_waypoint_nav)/rviz_config/model.rviz" />

<!-- Run husky_navigation to start move_base -->
<include file="$(find husky_navigation)/launch/move_base_nav.launch" />

<!-- launch safety node to allow the user to disable velocity commands to the robot -->
<include file="$(find outdoor_waypoint_nav)/launch/include/safety_node.launch" />

</launch>
